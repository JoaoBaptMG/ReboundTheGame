//
// Copyright (c) 2016-2018 Jo√£o Baptista de Paula e Silva.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

#include "UnicodeUtils.hpp"
#include <algorithm>

// Based on https://www.unicode.org/Public/10.0.0/ucd/DerivedCoreProperties.txt, Grapheme_Extender
constexpr uint32_t GraphemeExtenderIntervals[] =
{
    0x00300, 0x00370, 0x00483, 0x0048A, 0x00591, 0x005BE, 0x005BF, 0x005C0, 0x005C1, 0x005C3, 0x005C4, 0x005C6,
    0x005C7, 0x005C8, 0x00610, 0x0061B, 0x0064B, 0x00660, 0x00670, 0x00671, 0x006D6, 0x006DD, 0x006DF, 0x006E5,
    0x006E7, 0x006E9, 0x006EA, 0x006EE, 0x00711, 0x00712, 0x00730, 0x0074B, 0x007A6, 0x007B1, 0x007EB, 0x007F4,
    0x00816, 0x0081A, 0x0081B, 0x00824, 0x00825, 0x00828, 0x00829, 0x0082E, 0x00859, 0x0085C, 0x008D4, 0x008E2,
    0x008E3, 0x00903, 0x0093A, 0x0093B, 0x0093C, 0x0093D, 0x00941, 0x00949, 0x0094D, 0x0094E, 0x00951, 0x00958,
    0x00962, 0x00964, 0x00981, 0x00982, 0x009BC, 0x009BD, 0x009BE, 0x009BF, 0x009C1, 0x009C5, 0x009CD, 0x009CE,
    0x009D7, 0x009D8, 0x009E2, 0x009E4, 0x00A01, 0x00A03, 0x00A3C, 0x00A3D, 0x00A41, 0x00A43, 0x00A47, 0x00A49,
    0x00A4B, 0x00A4E, 0x00A51, 0x00A52, 0x00A70, 0x00A72, 0x00A75, 0x00A76, 0x00A81, 0x00A83, 0x00ABC, 0x00ABD,
    0x00AC1, 0x00AC6, 0x00AC7, 0x00AC9, 0x00ACD, 0x00ACE, 0x00AE2, 0x00AE4, 0x00AFA, 0x00B00, 0x00B01, 0x00B02,
    0x00B3C, 0x00B3D, 0x00B3E, 0x00B40, 0x00B41, 0x00B45, 0x00B4D, 0x00B4E, 0x00B56, 0x00B58, 0x00B62, 0x00B64,
    0x00B82, 0x00B83, 0x00BBE, 0x00BBF, 0x00BC0, 0x00BC1, 0x00BCD, 0x00BCE, 0x00BD7, 0x00BD8, 0x00C00, 0x00C01,
    0x00C3E, 0x00C41, 0x00C46, 0x00C49, 0x00C4A, 0x00C4E, 0x00C55, 0x00C57, 0x00C62, 0x00C64, 0x00C81, 0x00C82,
    0x00CBC, 0x00CBD, 0x00CBF, 0x00CC0, 0x00CC2, 0x00CC3, 0x00CC6, 0x00CC7, 0x00CCC, 0x00CCE, 0x00CD5, 0x00CD7,
    0x00CE2, 0x00CE4, 0x00D00, 0x00D02, 0x00D3B, 0x00D3D, 0x00D3E, 0x00D3F, 0x00D41, 0x00D45, 0x00D4D, 0x00D4E,
    0x00D57, 0x00D58, 0x00D62, 0x00D64, 0x00DCA, 0x00DCB, 0x00DCF, 0x00DD0, 0x00DD2, 0x00DD5, 0x00DD6, 0x00DD7,
    0x00DDF, 0x00DE0, 0x00E31, 0x00E32, 0x00E34, 0x00E3B, 0x00E47, 0x00E4F, 0x00EB1, 0x00EB2, 0x00EB4, 0x00EBA,
    0x00EBB, 0x00EBD, 0x00EC8, 0x00ECE, 0x00F18, 0x00F1A, 0x00F35, 0x00F36, 0x00F37, 0x00F38, 0x00F39, 0x00F3A,
    0x00F71, 0x00F7F, 0x00F80, 0x00F85, 0x00F86, 0x00F88, 0x00F8D, 0x00F98, 0x00F99, 0x00FBD, 0x00FC6, 0x00FC7,
    0x0102D, 0x01031, 0x01032, 0x01038, 0x01039, 0x0103B, 0x0103D, 0x0103F, 0x01058, 0x0105A, 0x0105E, 0x01061,
    0x01071, 0x01075, 0x01082, 0x01083, 0x01085, 0x01087, 0x0108D, 0x0108E, 0x0109D, 0x0109E, 0x0135D, 0x01360,
    0x01712, 0x01715, 0x01732, 0x01735, 0x01752, 0x01754, 0x01772, 0x01774, 0x017B4, 0x017B6, 0x017B7, 0x017BE,
    0x017C6, 0x017C7, 0x017C9, 0x017D4, 0x017DD, 0x017DE, 0x0180B, 0x0180E, 0x01885, 0x01887, 0x018A9, 0x018AA,
    0x01920, 0x01923, 0x01927, 0x01929, 0x01932, 0x01933, 0x01939, 0x0193C, 0x01A17, 0x01A19, 0x01A1B, 0x01A1C,
    0x01A56, 0x01A57, 0x01A58, 0x01A5F, 0x01A60, 0x01A61, 0x01A62, 0x01A63, 0x01A65, 0x01A6D, 0x01A73, 0x01A7D,
    0x01A7F, 0x01A80, 0x01AB0, 0x01ABF, 0x01B00, 0x01B04, 0x01B34, 0x01B35, 0x01B36, 0x01B3B, 0x01B3C, 0x01B3D,
    0x01B42, 0x01B43, 0x01B6B, 0x01B74, 0x01B80, 0x01B82, 0x01BA2, 0x01BA6, 0x01BA8, 0x01BAA, 0x01BAB, 0x01BAE,
    0x01BE6, 0x01BE7, 0x01BE8, 0x01BEA, 0x01BED, 0x01BEE, 0x01BEF, 0x01BF2, 0x01C2C, 0x01C34, 0x01C36, 0x01C38,
    0x01CD0, 0x01CD3, 0x01CD4, 0x01CE1, 0x01CE2, 0x01CE9, 0x01CED, 0x01CEE, 0x01CF4, 0x01CF5, 0x01CF8, 0x01CFA,
    0x01DC0, 0x01DFA, 0x01DFB, 0x01E00, 0x0200C, 0x0200D, 0x020D0, 0x020F1, 0x02CEF, 0x02CF2, 0x02D7F, 0x02D80,
    0x02DE0, 0x02E00, 0x0302A, 0x03030, 0x03099, 0x0309B, 0x0A66F, 0x0A673, 0x0A674, 0x0A67E, 0x0A69E, 0x0A6A0,
    0x0A6F0, 0x0A6F2, 0x0A802, 0x0A803, 0x0A806, 0x0A807, 0x0A80B, 0x0A80C, 0x0A825, 0x0A827, 0x0A8C4, 0x0A8C6,
    0x0A8E0, 0x0A8F2, 0x0A926, 0x0A92E, 0x0A947, 0x0A952, 0x0A980, 0x0A983, 0x0A9B3, 0x0A9B4, 0x0A9B6, 0x0A9BA,
    0x0A9BC, 0x0A9BD, 0x0A9E5, 0x0A9E6, 0x0AA29, 0x0AA2F, 0x0AA31, 0x0AA33, 0x0AA35, 0x0AA37, 0x0AA43, 0x0AA44,
    0x0AA4C, 0x0AA4D, 0x0AA7C, 0x0AA7D, 0x0AAB0, 0x0AAB1, 0x0AAB2, 0x0AAB5, 0x0AAB7, 0x0AAB9, 0x0AABE, 0x0AAC0,
    0x0AAC1, 0x0AAC2, 0x0AAEC, 0x0AAEE, 0x0AAF6, 0x0AAF7, 0x0ABE5, 0x0ABE6, 0x0ABE8, 0x0ABE9, 0x0ABED, 0x0ABEE,
    0x0FB1E, 0x0FB1F, 0x0FE00, 0x0FE10, 0x0FE20, 0x0FE30, 0x0FF9E, 0x0FFA0, 0x101FD, 0x101FE, 0x102E0, 0x102E1,
    0x10376, 0x1037B, 0x10A01, 0x10A04, 0x10A05, 0x10A07, 0x10A0C, 0x10A10, 0x10A38, 0x10A3B, 0x10A3F, 0x10A40,
    0x10AE5, 0x10AE7, 0x11001, 0x11002, 0x11038, 0x11047, 0x1107F, 0x11082, 0x110B3, 0x110B7, 0x110B9, 0x110BB,
    0x11100, 0x11103, 0x11127, 0x1112C, 0x1112D, 0x11135, 0x11173, 0x11174, 0x11180, 0x11182, 0x111B6, 0x111BF,
    0x111CA, 0x111CD, 0x1122F, 0x11232, 0x11234, 0x11235, 0x11236, 0x11238, 0x1123E, 0x1123F, 0x112DF, 0x112E0,
    0x112E3, 0x112EB, 0x11300, 0x11302, 0x1133C, 0x1133D, 0x1133E, 0x1133F, 0x11340, 0x11341, 0x11357, 0x11358,
    0x11366, 0x1136D, 0x11370, 0x11375, 0x11438, 0x11440, 0x11442, 0x11445, 0x11446, 0x11447, 0x114B0, 0x114B1,
    0x114B3, 0x114B9, 0x114BA, 0x114BB, 0x114BD, 0x114BE, 0x114BF, 0x114C1, 0x114C2, 0x114C4, 0x115AF, 0x115B0,
    0x115B2, 0x115B6, 0x115BC, 0x115BE, 0x115BF, 0x115C1, 0x115DC, 0x115DE, 0x11633, 0x1163B, 0x1163D, 0x1163E,
    0x1163F, 0x11641, 0x116AB, 0x116AC, 0x116AD, 0x116AE, 0x116B0, 0x116B6, 0x116B7, 0x116B8, 0x1171D, 0x11720,
    0x11722, 0x11726, 0x11727, 0x1172C, 0x11A01, 0x11A07, 0x11A09, 0x11A0B, 0x11A33, 0x11A39, 0x11A3B, 0x11A3F,
    0x11A47, 0x11A48, 0x11A51, 0x11A57, 0x11A59, 0x11A5C, 0x11A8A, 0x11A97, 0x11A98, 0x11A9A, 0x11C30, 0x11C37,
    0x11C38, 0x11C3E, 0x11C3F, 0x11C40, 0x11C92, 0x11CA8, 0x11CAA, 0x11CB1, 0x11CB2, 0x11CB4, 0x11CB5, 0x11CB7,
    0x11D31, 0x11D37, 0x11D3A, 0x11D3B, 0x11D3C, 0x11D3E, 0x11D3F, 0x11D46, 0x11D47, 0x11D48, 0x16AF0, 0x16AF5,
    0x16B30, 0x16B37, 0x16F8F, 0x16F93, 0x1BC9D, 0x1BC9F, 0x1D165, 0x1D166, 0x1D167, 0x1D16A, 0x1D16E, 0x1D173,
    0x1D17B, 0x1D183, 0x1D185, 0x1D18C, 0x1D1AA, 0x1D1AE, 0x1D242, 0x1D245, 0x1DA00, 0x1DA37, 0x1DA3B, 0x1DA6D,
    0x1DA75, 0x1DA76, 0x1DA84, 0x1DA85, 0x1DA9B, 0x1DAA0, 0x1DAA1, 0x1DAB0, 0x1E000, 0x1E007, 0x1E008, 0x1E019,
    0x1E01B, 0x1E022, 0x1E023, 0x1E025, 0x1E026, 0x1E02B, 0x1E8D0, 0x1E8D7, 0x1E944, 0x1E94B, 0xE0020, 0xE0080,
    0xE0100, 0xE01F0
};
constexpr auto GraphemeExtenderIntervalsEnd = GraphemeExtenderIntervals +
    sizeof(GraphemeExtenderIntervals)/sizeof(GraphemeExtenderIntervals[0]);

bool unicode::isGraphemeExtender(uint32_t c)
{
    auto ofs = std::upper_bound(GraphemeExtenderIntervals, GraphemeExtenderIntervalsEnd, c) - GraphemeExtenderIntervals;
    return ofs % 2 == 1;
}
